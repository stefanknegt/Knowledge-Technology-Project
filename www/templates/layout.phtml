<!DOCTYPE html>
<html>
	<head>
		<title><?=$this->html($state->title) ?></title>
		<link rel="stylesheet" href="webfrontend.css">
	</head>
	<body id="webfrontend">
		<nav class="site-nav">
			<a href="/">Home</a>
			<a href="<?=$this->attr($_SERVER['REQUEST_URI'])?>">Start opnieuw</a>
			<!-- <a href="analyse.php?kb=<?=rawurlencode($_GET['kb'])?>">Analyse</a> -->
			<a href="#debug">Debug</a>
		</nav>
		<header>
			<h1><?=$this->html($state->title)?></h1>
			<p><?=$state->description?></p>
		</header>
		<div>
			<form method="post">
				<input type="hidden" name="state" value="<?=_encode($state) ?>">
				<input type="hidden" name="log" value="<?=_encode($log) ?>">
				<?=$content?>
			</form>
		</div>
		<aside id="debug-info">
			<button class="close" title="Close debug panel">&times;</button>

			<section class="state-info fact-state">
				<h3>Facts</h3>
				<select id="fact-filter">
					<option value="user-fact">User defined only</option>
					<option value="default-fact">System defined only</option>
					<option value="all">All</option>
				</select>
				<dl>
					<?php foreach($state->facts as $name => $value): ?>
					<dt class="all <?=KnowledgeState::is_default_fact($name) ? 'default-fact' : 'user-fact'?>"><?=$name?></dt>
					<dd><?=$value?><?php if (KnowledgeState::is_variable($value)) printf('<small>%s</small>', $state->resolve($value)) ?></dd>
					<?php endforeach ?>
				</dl>
			</section>
			
			<section class="state-info goal-stack">
				<h3>Goal stack</h3>
				<ol>
					<?php foreach ($state->goalStack as $goal): ?>
					<li><?=$goal?></li>
					<?php endforeach ?>
				</ol>
			</section>
			
			<section class="state-info rule-state">
				<h3>Rules</h3>
				<?php $formatter = new HTMLFormatter($state); ?>
				<ul>
					<?php foreach($state->rules as $rule): ?>
					<li><?=$formatter->formatRule($rule)?></li>
					<?php endforeach ?>
				</ul>
			</section>

			<section class="state-info log">
				<h3>Step by step</h3>
				<select id="log-level-selector">
					<option value="<?=LOG_LEVEL_WARNING?>">Warnings only</option>
					<option value="<?=LOG_LEVEL_INFO?>">Useful</option>
					<option value="<?=LOG_LEVEL_VERBOSE?>">Everything</option>
				</select>
				<ol>
				<?php foreach($log->messages as $step_i => $step): ?>
					<li>Step <?=$step_i?></li>
					<ol>
					<?php foreach ($step as list($level, $message)): ?>
						<li class="log-level-<?=$level?>">
							<?=$message?>
						</li>
					<?php endforeach ?>
					</ol>
				<?php endforeach ?>
				</ol>
			</section>
		</aside>

		<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
		<link rel="stylesheet" href="jquery-ui.min.css">
		<script src="jquery-ui.min.js"></script>
		
		<script>
			
		$( ".selector" ).tooltip();
		$( "#huid" ).tooltip({ content: 'Vergelijkbaar met: <br><img src="huid.jpg" />' });
		

		/* when clicking on an item, select the accompanying radio-button
		and submit the form. Unless the user clicks on a link. */
					
		$('.question > .question-wrapper > .options > li')
			.addClass('single-click')
			.click(function(e) {
								
				if (e.target.nodeName == 'A')
					return;
				
				var radio = $(this).find('input[type=radio]');
				radio.prop('checked', true);
				e.preventDefault();
				radio.get(0).form.submit();
			});
		
		$('.question button[type=submit]').hide();

		var panel = $('#debug-info');

		var grippy = $('<div>').addClass('grippy').appendTo(panel);

		var delta = 15;

		function updateDebugPanelVisibility() {
			$(document.body).toggleClass('show-debug-info', !!parseInt(localStorage.debug));

			if (localStorage.debugPanelWidth)
				panel.css('width', localStorage.debugPanelWidth);
		}

		updateDebugPanelVisibility();

		$('a[href=#debug]').click(function(e) {
			e.preventDefault();
			localStorage.debug = parseInt(localStorage.debug) ? 0 : 1;
			updateDebugPanelVisibility();
		});

		$('#debug-info > .close').click(function() {
			localStorage.debug = 0;
			updateDebugPanelVisibility();
		});

		function resizeDebugPanel(e) {
			localStorage.debugPanelWidth = Math.max(document.body.clientWidth - e.clientX + delta, 300);
			panel.css('width', localStorage.debugPanelWidth);
		}

		function removeResizeListener() {
			$(window)
				.off('mousemove', resizeDebugPanel)
				.off('mouseup', removeResizeListener);
		}

		grippy.mousedown(function(e) {
			e.preventDefault();
			jQuery(window)
				.on('mousemove', resizeDebugPanel)
				.on('mouseup', removeResizeListener);
		});

		function updateLogLevel() {
			var logLevel = $('#log-level-selector').val();
			localStorage.logLevel = logLevel;

			$('.state-info.log li').each(function() {
				var messageLogLevel = this.className.match(/log-level-(\d)/);
				$(this).toggle(!messageLogLevel || messageLogLevel[1] >= logLevel);
			});
		}

		$('#log-level-selector')
			.change(updateLogLevel)
			.val(localStorage.logLevel || <?=LOG_LEVEL_INFO?>);

		updateLogLevel();

		function updateFactFilter() {
			var filter = $('#fact-filter').val();
			localStorage.factFilter = filter;

			$('.fact-state dt').each(function() {
				$(this).add($(this).next('dd')).toggle(!filter || $(this).hasClass(filter));
			});
		}

		$('#fact-filter')
			.change(updateFactFilter)
			.val(localStorage.factFilter || 'all');

		updateFactFilter();
		</script>
	</body>
</html>
